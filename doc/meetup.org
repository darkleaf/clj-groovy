* –ó–∞–≤–æ–¥–Ω–∞—è –ö–ª–æ–∂–∞ [Groovy Clojure]

–∏–ª–∏ Groovy –≤–º–µ—Å—Ç–æ deftype

https://github.com/darkleaf/clj-groovy

28 –º–∞—Ä—Ç–∞ 2024
–ú–∏—Ö–∞–∏–ª –ö—É–∑—å–º–∏–Ω

–ù–∞–Ω–∏–º–∞—é –≤ [[https://gmonit.ru][gmonit.ru]]

* API

–í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–¥–æ–±–Ω–æ ~deftype~ –∏–ª–∏ ~defrecord~.
–°–æ –≤—Å–µ–º–∏ –∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏.

#+begin_src clojure
  (g/defclass MyClass)

  (->MyClass arg)
#+end_src

–ú–æ–∂–Ω–æ —Å—Ä–∞–∑—É –∏–Ω—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç,
–Ω–∞–ø—Ä–∏–º–µ—Ä —Ñ—É–∫–Ω—Ü–∏—é –∏–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–æ—Ç–æ–∫–æ–ª–∞.

#+begin_src clojure
  (g/defobject my-obj)

  (my-obj arg) ;; if IFn
  (protocol/method my-obj) ;; if Protocol
#+end_src

* –ò—Å—Ç–æ—Ä–∏—è
** –®–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä—ã

–≠—Ä–∞ [[https://htmx.org/][htmx]], [[https://hotwired.dev/][Hotwire]].

–í Clojure —Å–µ–π—á–∞—Å –≤—Å–µ –ø–ª–æ—Ö–æ —Å —à–∞–±–ª–æ–Ω–∏–∑–∞—Ü–∏–µ–π —Ç–µ–∫—Å—Ç–∞ –∏ html.
–¢–æ–ª—å–∫–æ-—Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–∏ –ø–æ—è–≤–ª—è—Ç—å—Å—è –ø—Ä–æ–µ–∫—Ç—ã, –≤—Ä–æ–¥–µ [[https://github.com/onionpancakes/chassis][chassis]].

–ü–æ—á–µ–º—É –±—ã –≤–º–µ—Å—Ç–æ —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–µ–ª—ã–π —è–∑—ã–∫? üòÅ

** –®–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä—ã (–ø–æ–¥—Ä–æ–±–Ω–æ)

- –ù–µ—Ç –∑—Ä–µ–ª—ã—Ö —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤
  - —É—è–∑–≤–∏–º–æ—Å—Ç–∏
  - —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã
  - —É–¥–æ–±—Å—Ç–≤–æ

- Java —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä—ã, selmer
 - –∑–∞—Ç–æ—á–µ–Ω—ã –Ω–∞ java –ø–æ–¥–æ–±–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å (dot notation),
   –∞ –º–∞–ø—ã –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä –∫–ª—é—á–∏ —Å –Ω–µ–π–º—Å–ø–µ–π—Å–∞–º–∏.
   #+begin_src clojure
     {:user/name "Mikhail"
      :org/name  "GMonit"
      :ru.hsl.gmonit.apm.awesome-package/name "..."
      'foo/name  "..."
      "name"     "..."}
   #+end_src
   #+begin_src erb
     <%= model.:user/name %>
     <%= model.:ru.hsl.gmonit.apm.awesome-package/name %>
   #+end_src
 - –∫–æ–º–ø–∏–ª—è—Ü–∏—è, –∫—ç—à–∏
 - –º–µ—à–∞—é—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —á–µ—Ä–µ–∑ REPL
 - –∏–∑–æ–±—Ä–µ—Ç–∞—é—Ç –∑–∞–Ω–æ–≤–æ –Ω–µ–π–º—Å–ø–µ–π—Å—ã
   –∫–æ–≥–¥–∞ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –∏ ~clojure.lang.Var~

- —à–∞–±–ª–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
 - multiline string literal
   #+begin_src clojure
     (defn greeting [name] """
       –ü—Ä–∏–≤–µ—Ç, <(name)>!
       –•–æ—á–µ—à—å "–Ω–µ–º–Ω–æ–≥–æ" –∫–∞–≤—ã—á–µ–∫?
     """)
   #+end_src

- [[https://github.com/weavejester/hiccup][hiccup]]
  –∑–∞–±—Ä–æ—à–µ–Ω
- [[https://github.com/yogthos/Selmer][selmer]]
  –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä, —Å–æ –≤—Å–µ–º–∏ –∏—Ö –ø—Ä–æ–±–ª–µ–º–∞–º–∏
- [[https://github.com/onionpancakes/chassis][chassis]]
  –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–π, —Ç–æ–ª—å–∫–æ html5

–†–µ—à–µ–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ

** expression vs statement

–ë—ã–≤–∞—é—Ç *–ø–æ–ª–µ–∑–Ω—ã–µ* –∞–ª–≥–æ—Ä–∏—Ç–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –Ω–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ C –ø–æ–¥–æ–±–Ω–æ–º —è–∑—ã–∫–µ,
–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –µ–≥–æ –Ω–∞ –ø–æ–ª–Ω—É—é.

- foo[x++]
- foo[++x]
- —Ä–∞–Ω–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç—ã (–æ–¥–æ–±—Ä—è—é)
- continue   –≤ —Å–ª—É—á–∞–π–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
- –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Å–ª—É—á–∞–π–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö

–û—á–µ–Ω—å —Ç—è–∂–µ–ª–æ –ø–µ—Ä–µ–ø–∏—ã–≤–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º—ã —Å statament based –Ω–∞ expression based —è–∑—ã–∫.

#+begin_src js
  function (node) {
    var fieldsUsed = 0
    for (var fieldIdx = 0; fieldIdx < fieldCount; fieldIdx++) {

      var fieldVal = node.fields[fieldsUsed++]
      //                         __________^^
      if (fieldVal === null) {
        // ...
        continue
      }

      var fieldName = fieldSpec.name
      var fieldType = fieldSpec.type
      // ...
      decodedNode[fieldName] = fieldVal
    }
  }
#+end_src

#+begin_src clojure
  (dotimes [fieldIdx fieldsCount]
    (let [...]
      (if (= fieldType "node")
        (decodeNodeField decodedNode fieldSpec)
        (let [fieldVal (nth nodeFields @fieldsUsed)
              _        (vswap! fieldsUsed inc)]
          (do
            (when ...
              (let ...
                (if ...))))
#+end_src

–ù–µ–º–Ω–æ–≥–æ –ø–æ–º–æ–≥–∞–µ—Ç ~<<-~
#+begin_src clojure
  (<<-
   (let [...])
   (if guard return)
   (do side-effect)
   (if guard return)
   (for [...])
   (doseq [...]))
#+end_src

–ù–æ volatile —ç—Ç–æ –Ω–µ —É–±–µ—Ä–µ—Ç

** Java interop

- ~gen-class~
  —Ç—Ä–µ–±—É–µ—Ç –∫–æ–º–ø–∏–ª—è—Ü–∏–∏,
  —Ö–æ—Ç—è –µ–≥–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º

- ~proxy~
  –º–µ–¥–ª–µ–Ω–Ω—ã–π

- —Å–≤–æ–∏ –∫–ª–∞—Å—Å—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π

Red Planet Labs
- [[https://github.com/redplanetlabs/proxy-plus][proxy-plus]]
- [[https://github.com/redplanetlabs/defexception][defexception]]

* Groovy

- –ø–æ—Ö–æ–∂ –Ω–∞ Java

- –Ω–∏–∫–∞–∫ –Ω–µ —É–º—Ä–µ—Ç

- –≤—ã–ø—É—Å–∫–∞–µ—Ç –Ω–æ–≤—ã–µ —Ä–µ–ª–∏–∑—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –º–µ—Å—è—Ü
  5.0.0-alpha

- –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–µ Java —Ñ–∏—á–∏
  –≤—Ä–æ–¥–µ —Ä–µ–∫–æ—Ä–¥–æ–≤ –∏ –ª—è–º–±–¥ SAM

- –∑–∞—Ç–æ—á–µ–Ω –ø–æ–¥ –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ

- —É–¥–æ–±–Ω–æ–µ API –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞

- –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è, –Ω–µ –∏–Ω—Ç–µ—Ä–ø–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è

- @CompileStatic
  —É–±–∏—Ä–∞–µ—Ç –Ω–µ–ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–æ–≤

- [[https://issues.apache.org/jira/browse/GROOVY-7492][@POJO]]

  #+begin_quote
    This opens up some of Groovy's powerful transforms to the wider Java community.
    Groovy can effectively be used as a Lombok-style pre-processor for some Java classes.
  #+end_quote

- runtime metaprogramming
  - method missing
  - DSL

- compile-time metaprogramming
  - @InheritConstructors
  - @Delegate
  - API –¥–ª—è AST –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π

- –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã

  #+begin_src groovy
    myIFn.invoke(a, b, c)
    ;; vs
    myIFn(a, b, c)
  #+end_src

- –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∫ –ª—é–±–æ–º—É –∫–ª–∞—Å—Å—É

  #+begin_src groovy
    obj.with { inc.invoke(it) }
    ;; vs
    obj.with(inc)
  #+end_src

* ClassLoader

** GroovyClassLoader

- –Ω–∞—á–∏–Ω–∞–ª —Å –Ω–µ–≥–æ
- –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç —Å–∫—Ä–∏–ø—Ç—ã
  –∏ –∫–ª–∞—Å—Å—ã
- –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
- *–Ω–µ–ª—å–∑—è* ~(import MySuperClass)~
- *–Ω–µ–ª—å–∑—è* import –≤ –¥—Ä—É–≥–æ–º —Å–∫—Ä–∏–ø—Ç–µ
- —Ç–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç—ã
- –∏–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–ª–∞—Å—Å–∞–º–∏ —á–µ—Ä–µ–∑ —Ä–µ—Ñ–ª–µ–∫—Å–∏—é

** DynamicClassLoader

#+begin_src clojure
  @Compiler/LOADER
#+end_src

- –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –ª—é–±–æ–π –±–∞–π—Ç–∫–æ–¥
  –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å deftype –∏ —Ç.–ø.
- *–º–æ–∂–Ω–æ* ~(import MySuperClass)~
- *–º–æ–∂–Ω–æ* import –≤ –¥—Ä—É–≥–æ–º –∫–ª–∞—Å—Å–µ
- –∏ –Ω–µ –Ω—É–∂–Ω–∞ —Ä–µ—Ñ–ª–µ–∫—Å–∏—è

- —Ä–∞–∑–æ–±—Ä–∞–ª—Å—è —Å Groovy CompilationUnit
  –ø–æ–ª—É—á–∞—é –±–∞–π—Ç–∫–æ–¥ –≤ –≤–∏–¥–µ –±–∞–π—Ç–æ–≤

* –ò–Ω—Ç–µ—Ä–æ–ø —Å Clojure

clojure.java.api.Clojure
- var
- read

** —Å–∫–æ–±–æ—á–∫–∏ –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã

#+begin_src java
  obj.abc();
  obj.qwe();
  CoolHelper.xyz(obj); // !
#+end_src

#+begin_src clojure
  (abc obj)
  (qwe obj)
  (CoolHelper/xyz obj) ;; !
#+end_src

** –¥–∞–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–¥–µ–ª—å–Ω–æ

#+begin_src clojure
  {:user/name "Mikhail"
   :org/name  "GMonit"
   :ru.hsl.gmonit.apm.awesome-package/name "..."
   'foo/name  "..."
   "name"     "..."}
#+end_src

#+begin_src erb
  <%= model.:user/name %>
  <%= model.:ru.hsl.gmonit.apm.awesome-package/name %>
#+end_src

#+begin_src groovy
  def userName    = (IFn) (read ':user/name')
  def packageName = (IFn) (read ':ru.hsl.gmonit.apm.awesome-package/name')

  model.with(userName)     // —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
  model.with(packageName)  // —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
#+end_src

** with & ->

#+begin_src clojure
  (-> 1
      (vector 2 3)
      (conj 4))
#+end_src

#+begin_src groovy
  1
    .with(vector, 2, 3) // vector.invoke(1, 2, 3)
    .with(conj)
#+end_src

** rwith & ->>
** tap & doto

* Java

#+begin_src java
  chain(obj)
      .with(vector, 2, 3)
      .rwith(map, inc)
      .tap(prn)
      .result()
#+end_src

* Demo

- —Ç–µ—Å—Ç—ã
  - –∏—Å–∫–ª—é—á–µ–Ω–∏—è
- –±–µ–Ω—á–º–∞—Ä–∫–∏
  - –ø—Ä–æ—Ç–æ–∫–æ–ª—ã
- —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è

* –î—Ä—É–≥–∏–µ —è–∑—ã–∫–∏ –≤–º–µ—Å—Ç–æ Groovy

- Kotlin
  –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π Scripting API –Ω–µ –ø–æ–¥–æ–π–¥–µ—Ç,
  –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º–µ–Ω–Ω–æ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä
  –∏ –ø–æ–ª—É—á–∞—Ç—å –±–∞–π—Ç-–∫–æ–¥.

  API –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–∞–π–ª—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–π —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ.
  –ò –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å [[https://github.com/google/jimfs][jimfs]].
  - [[https://github.com/casid/jte/blob/main/jte-kotlin/src/main/java/gg/jte/compiler/kotlin/KotlinClassCompiler.java][jte kotlin compiler]]
  - [[https://stackoverflow.com/questions/45888068/how-do-i-run-tests-compiling-a-kotlin-file-in-memory-and-check-the-result][stack overflow]]

- Java
  –ú–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å JOOQ, –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏.

  –ø—Ä–∏–º–µ—Ä—ã
  + [[https://github.com/sourcebuddy/sourcebuddy][sourcebuddy]]
  + [[https://github.com/jOOQ/jOOR/blob/main/jOOR/src/main/java/org/joor/Compile.java][JOOR]]

- [[https://github.com/janino-compiler/janino][Janino]]
  Janino is a super-small, super-fast Java‚Ñ¢ compiler.

  –ü—Ä–æ—Å—Ç–æ–µ API. –õ–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å –±–∞–π—Ç—ã –¥–ª—è DynamicClassLoader.
  –ù–µ –≤—Å–µ —Ñ–∏—á–∏ Java –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è.

* –î–∞–ª—å–Ω–µ–π—à–∏–µ —à–∞–≥–∏

- –Ω–∞–∑–≤–∞–Ω–∏–µ
- –∫–æ–º–ø–∏–ª—è—Ü–∏—è
  –∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º –Ω–µ–π–º—Å–ø–µ–π—Å, –∫–æ–º–ø–∏–ª–∏—Ä—É—é—Ç—Å—è –∏ –≥—Ä—É–≤–∏ –∫–ª–∞—Å—Å—ã
- –ø—Ä–∏–º–µ—Ä—ã
- ideas.org
